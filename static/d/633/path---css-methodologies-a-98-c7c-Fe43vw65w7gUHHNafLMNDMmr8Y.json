{"data":{"site":{"siteMetadata":{"title":"Developer Notes","author":"Mark Vi"}},"markdownRemark":{"id":"a4301fda-34d1-5c2a-84b5-0b335f141f82","excerpt":"A CSS methodology is a set of guidelines for writing modular, reusable and scalable code. Although CSS is an easy language to write, without an agreed-upon…","html":"<p>A CSS methodology is a set of guidelines for writing modular, reusable and scalable code. Although CSS is an easy language to write, without an agreed-upon convention, the code gets messy almost as fast as it is written. Since each CSS declaration is defined on its own line, files get huge quickly, making them a nightmare to maintain.</p>\n<p>To solve this and other CSS implementation issues, groups of coders around the world have developed different CSS methodologies, or sets of standard practices. Each comes with its own focus, advantages and disadvantages.</p>\n<p>In this article we will take a look at the pros and cons of a few of the most popular CSS methodologies:</p>\n<h2>Object-Oriented CSS</h2>\n<blockquote>\n<p>In a nutshell: Divide layout into objects, then abstract their CSS into modules</p>\n</blockquote>\n<p>OOCSS involves identifying objects on a page and separating their structural and visual CSS styles into two declaration blocks. These blocks can then be reused by different elements, and changes need only be made in one place, leading to better consistency.</p>\n<p>Declaration blocks are applied to elements using single-class selectors to avoid specificity issues. This technique also separates content from container, so objects look the same wherever they appear. Classes also decouple mark-up from CSS. Using .title instead of h2 for heading <h2 class=\"title\"> allows it to be changed to <code class=\"language-text\">&lt;h3 class=&quot;title&quot;&gt;</code> without changing the CSS.</p>\n<p>To further separate HTML and CSS, class names should not include property values. A class ‘blue’ would require renaming in HTML and CSS if the colour changed.</p>\n<p>Using OOCSS a button’s CSS and markup can be defined as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.button { padding: 10px 16px; }\n.primary-skin { color: blue; }\n.secondary-skin { color: green; }\n&lt;button class=&quot;button primary-skin&quot;&gt;primary skin button&lt;/button&gt;\n&lt;button class=&quot;button secondary-skin&quot;&gt;secondary skin button&lt;/button&gt;\n&lt;div class=&quot;primary-skin&quot;&gt;primary skin div&lt;/div&gt;</code></pre></div>","frontmatter":{"title":"A web designer's guide to CSS methodologies","date":"February 20, 2019"}}},"pageContext":{"slug":"/css-methodologies/","previous":{"fields":{"slug":"/gatsby/"},"frontmatter":{"title":"Gatsby JS a Static site generator"}},"next":null}}